// Code generated by MockGen. DO NOT EDIT.
// Source: internal/entrypoint/mapper/interfaces.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	entity "github.com/quizardhq/golang-ddd-boilerplate/internal/domain/entity"
	dto "github.com/quizardhq/golang-ddd-boilerplate/internal/entrypoint/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockPersonMapper is a mock of PersonMapper interface.
type MockPersonMapper struct {
	ctrl     *gomock.Controller
	recorder *MockPersonMapperMockRecorder
}

// MockPersonMapperMockRecorder is the mock recorder for MockPersonMapper.
type MockPersonMapperMockRecorder struct {
	mock *MockPersonMapper
}

// NewMockPersonMapper creates a new mock instance.
func NewMockPersonMapper(ctrl *gomock.Controller) *MockPersonMapper {
	mock := &MockPersonMapper{ctrl: ctrl}
	mock.recorder = &MockPersonMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonMapper) EXPECT() *MockPersonMapperMockRecorder {
	return m.recorder
}

// FromDTO mocks base method.
func (m *MockPersonMapper) FromDTO(arg0 dto.PersonDTO) entity.Person {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FromDTO", arg0)
	ret0, _ := ret[0].(entity.Person)
	return ret0
}

// FromDTO indicates an expected call of FromDTO.
func (mr *MockPersonMapperMockRecorder) FromDTO(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FromDTO", reflect.TypeOf((*MockPersonMapper)(nil).FromDTO), arg0)
}

// ToDTO mocks base method.
func (m *MockPersonMapper) ToDTO(arg0 entity.Person) dto.PersonDTO {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToDTO", arg0)
	ret0, _ := ret[0].(dto.PersonDTO)
	return ret0
}

// ToDTO indicates an expected call of ToDTO.
func (mr *MockPersonMapperMockRecorder) ToDTO(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToDTO", reflect.TypeOf((*MockPersonMapper)(nil).ToDTO), arg0)
}

// ToManyDTO mocks base method.
func (m *MockPersonMapper) ToManyDTO(arg0 []entity.Person) []dto.PersonDTO {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToManyDTO", arg0)
	ret0, _ := ret[0].([]dto.PersonDTO)
	return ret0
}

// ToManyDTO indicates an expected call of ToManyDTO.
func (mr *MockPersonMapperMockRecorder) ToManyDTO(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToManyDTO", reflect.TypeOf((*MockPersonMapper)(nil).ToManyDTO), arg0)
}
